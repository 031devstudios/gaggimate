/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_COFFEEMACHINE_COMMS_PB_H_INCLUDED
#define PB_COFFEEMACHINE_COMMS_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _CoffeeMachine_PinControl_Pin {
    CoffeeMachine_PinControl_Pin_PUMP = 0,
    CoffeeMachine_PinControl_Pin_BOILER = 1
} CoffeeMachine_PinControl_Pin;

typedef enum _CoffeeMachine_PinRead_Pin {
    CoffeeMachine_PinRead_Pin_PUMP = 0,
    CoffeeMachine_PinRead_Pin_BOILER = 1
} CoffeeMachine_PinRead_Pin;

/* Struct definitions */
typedef struct _CoffeeMachine_TemperatureControl {
    float setpoint; /* Desired boiler temperature in Celsius. */
} CoffeeMachine_TemperatureControl;

typedef struct _CoffeeMachine_PinControl {
    CoffeeMachine_PinControl_Pin pin; /* Pin to control. */
    bool state; /* True = ON, False = OFF. */
} CoffeeMachine_PinControl;

typedef struct _CoffeeMachine_TemperatureRead {
    float temperature; /* Current boiler temperature in Celsius. */
} CoffeeMachine_TemperatureRead;

typedef struct _CoffeeMachine_PinRead {
    CoffeeMachine_PinRead_Pin pin; /* Pin to read. */
    bool state; /* True = ON, False = OFF. */
} CoffeeMachine_PinRead;

typedef struct _CoffeeMachine_PIDAutotune {
    char dummy_field;
} CoffeeMachine_PIDAutotune;

typedef struct _CoffeeMachine_Ping {
    bool is_alive; /* True if the UI is responsive. */
} CoffeeMachine_Ping;

typedef struct _CoffeeMachine_Error {
    int32_t error_code; /* Numeric error code */
    pb_callback_t error_message; /* Human-readable error message */
} CoffeeMachine_Error;

typedef struct _CoffeeMachine_Command {
    pb_size_t which_cmd;
    union {
        CoffeeMachine_TemperatureControl temp_control;
        CoffeeMachine_PinControl pin_control;
        CoffeeMachine_TemperatureRead temp_read;
        CoffeeMachine_PinRead pin_read;
        CoffeeMachine_PIDAutotune pid_autotune;
        CoffeeMachine_Ping ping;
        CoffeeMachine_Error error;
    } cmd;
} CoffeeMachine_Command;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _CoffeeMachine_PinControl_Pin_MIN CoffeeMachine_PinControl_Pin_PUMP
#define _CoffeeMachine_PinControl_Pin_MAX CoffeeMachine_PinControl_Pin_BOILER
#define _CoffeeMachine_PinControl_Pin_ARRAYSIZE ((CoffeeMachine_PinControl_Pin)(CoffeeMachine_PinControl_Pin_BOILER+1))

#define _CoffeeMachine_PinRead_Pin_MIN CoffeeMachine_PinRead_Pin_PUMP
#define _CoffeeMachine_PinRead_Pin_MAX CoffeeMachine_PinRead_Pin_BOILER
#define _CoffeeMachine_PinRead_Pin_ARRAYSIZE ((CoffeeMachine_PinRead_Pin)(CoffeeMachine_PinRead_Pin_BOILER+1))


#define CoffeeMachine_PinControl_pin_ENUMTYPE CoffeeMachine_PinControl_Pin


#define CoffeeMachine_PinRead_pin_ENUMTYPE CoffeeMachine_PinRead_Pin






/* Initializer values for message structs */
#define CoffeeMachine_TemperatureControl_init_default {0}
#define CoffeeMachine_PinControl_init_default    {_CoffeeMachine_PinControl_Pin_MIN, 0}
#define CoffeeMachine_TemperatureRead_init_default {0}
#define CoffeeMachine_PinRead_init_default       {_CoffeeMachine_PinRead_Pin_MIN, 0}
#define CoffeeMachine_PIDAutotune_init_default   {0}
#define CoffeeMachine_Ping_init_default          {0}
#define CoffeeMachine_Error_init_default         {0, {{NULL}, NULL}}
#define CoffeeMachine_Command_init_default       {0, {CoffeeMachine_TemperatureControl_init_default}}
#define CoffeeMachine_TemperatureControl_init_zero {0}
#define CoffeeMachine_PinControl_init_zero       {_CoffeeMachine_PinControl_Pin_MIN, 0}
#define CoffeeMachine_TemperatureRead_init_zero  {0}
#define CoffeeMachine_PinRead_init_zero          {_CoffeeMachine_PinRead_Pin_MIN, 0}
#define CoffeeMachine_PIDAutotune_init_zero      {0}
#define CoffeeMachine_Ping_init_zero             {0}
#define CoffeeMachine_Error_init_zero            {0, {{NULL}, NULL}}
#define CoffeeMachine_Command_init_zero          {0, {CoffeeMachine_TemperatureControl_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define CoffeeMachine_TemperatureControl_setpoint_tag 1
#define CoffeeMachine_PinControl_pin_tag         1
#define CoffeeMachine_PinControl_state_tag       2
#define CoffeeMachine_TemperatureRead_temperature_tag 1
#define CoffeeMachine_PinRead_pin_tag            1
#define CoffeeMachine_PinRead_state_tag          2
#define CoffeeMachine_Ping_is_alive_tag          1
#define CoffeeMachine_Error_error_code_tag       1
#define CoffeeMachine_Error_error_message_tag    2
#define CoffeeMachine_Command_temp_control_tag   1
#define CoffeeMachine_Command_pin_control_tag    2
#define CoffeeMachine_Command_temp_read_tag      3
#define CoffeeMachine_Command_pin_read_tag       4
#define CoffeeMachine_Command_pid_autotune_tag   5
#define CoffeeMachine_Command_ping_tag           6
#define CoffeeMachine_Command_error_tag          7

/* Struct field encoding specification for nanopb */
#define CoffeeMachine_TemperatureControl_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    setpoint,          1)
#define CoffeeMachine_TemperatureControl_CALLBACK NULL
#define CoffeeMachine_TemperatureControl_DEFAULT NULL

#define CoffeeMachine_PinControl_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    pin,               1) \
X(a, STATIC,   SINGULAR, BOOL,     state,             2)
#define CoffeeMachine_PinControl_CALLBACK NULL
#define CoffeeMachine_PinControl_DEFAULT NULL

#define CoffeeMachine_TemperatureRead_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    temperature,       1)
#define CoffeeMachine_TemperatureRead_CALLBACK NULL
#define CoffeeMachine_TemperatureRead_DEFAULT NULL

#define CoffeeMachine_PinRead_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    pin,               1) \
X(a, STATIC,   SINGULAR, BOOL,     state,             2)
#define CoffeeMachine_PinRead_CALLBACK NULL
#define CoffeeMachine_PinRead_DEFAULT NULL

#define CoffeeMachine_PIDAutotune_FIELDLIST(X, a) \

#define CoffeeMachine_PIDAutotune_CALLBACK NULL
#define CoffeeMachine_PIDAutotune_DEFAULT NULL

#define CoffeeMachine_Ping_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     is_alive,          1)
#define CoffeeMachine_Ping_CALLBACK NULL
#define CoffeeMachine_Ping_DEFAULT NULL

#define CoffeeMachine_Error_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    error_code,        1) \
X(a, CALLBACK, SINGULAR, STRING,   error_message,     2)
#define CoffeeMachine_Error_CALLBACK pb_default_field_callback
#define CoffeeMachine_Error_DEFAULT NULL

#define CoffeeMachine_Command_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (cmd,temp_control,cmd.temp_control),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (cmd,pin_control,cmd.pin_control),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (cmd,temp_read,cmd.temp_read),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (cmd,pin_read,cmd.pin_read),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (cmd,pid_autotune,cmd.pid_autotune),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (cmd,ping,cmd.ping),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (cmd,error,cmd.error),   7)
#define CoffeeMachine_Command_CALLBACK NULL
#define CoffeeMachine_Command_DEFAULT NULL
#define CoffeeMachine_Command_cmd_temp_control_MSGTYPE CoffeeMachine_TemperatureControl
#define CoffeeMachine_Command_cmd_pin_control_MSGTYPE CoffeeMachine_PinControl
#define CoffeeMachine_Command_cmd_temp_read_MSGTYPE CoffeeMachine_TemperatureRead
#define CoffeeMachine_Command_cmd_pin_read_MSGTYPE CoffeeMachine_PinRead
#define CoffeeMachine_Command_cmd_pid_autotune_MSGTYPE CoffeeMachine_PIDAutotune
#define CoffeeMachine_Command_cmd_ping_MSGTYPE CoffeeMachine_Ping
#define CoffeeMachine_Command_cmd_error_MSGTYPE CoffeeMachine_Error

extern const pb_msgdesc_t CoffeeMachine_TemperatureControl_msg;
extern const pb_msgdesc_t CoffeeMachine_PinControl_msg;
extern const pb_msgdesc_t CoffeeMachine_TemperatureRead_msg;
extern const pb_msgdesc_t CoffeeMachine_PinRead_msg;
extern const pb_msgdesc_t CoffeeMachine_PIDAutotune_msg;
extern const pb_msgdesc_t CoffeeMachine_Ping_msg;
extern const pb_msgdesc_t CoffeeMachine_Error_msg;
extern const pb_msgdesc_t CoffeeMachine_Command_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define CoffeeMachine_TemperatureControl_fields &CoffeeMachine_TemperatureControl_msg
#define CoffeeMachine_PinControl_fields &CoffeeMachine_PinControl_msg
#define CoffeeMachine_TemperatureRead_fields &CoffeeMachine_TemperatureRead_msg
#define CoffeeMachine_PinRead_fields &CoffeeMachine_PinRead_msg
#define CoffeeMachine_PIDAutotune_fields &CoffeeMachine_PIDAutotune_msg
#define CoffeeMachine_Ping_fields &CoffeeMachine_Ping_msg
#define CoffeeMachine_Error_fields &CoffeeMachine_Error_msg
#define CoffeeMachine_Command_fields &CoffeeMachine_Command_msg

/* Maximum encoded size of messages (where known) */
/* CoffeeMachine_Error_size depends on runtime parameters */
/* CoffeeMachine_Command_size depends on runtime parameters */
#define COFFEEMACHINE_COMMS_PB_H_MAX_SIZE        CoffeeMachine_TemperatureControl_size
#define CoffeeMachine_PIDAutotune_size           0
#define CoffeeMachine_PinControl_size            4
#define CoffeeMachine_PinRead_size               4
#define CoffeeMachine_Ping_size                  2
#define CoffeeMachine_TemperatureControl_size    5
#define CoffeeMachine_TemperatureRead_size       5

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
